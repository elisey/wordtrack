[tool.poetry]
name = "wordtrack"
version = "0.1.0"
description = "Service for learning foreign words"
authors = ["Elisei <elisey.rav@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
Django = "^4.2.0"
google-speech = "^1.2.0"
pydantic = "^2.4.0"
gunicorn = "^21.2.0"
django-stubs = "^4.2.5"
python-dotenv = "^1.0.0"
openai = "^0.28.1"
jsonschema = "^4.19.2"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
black = "^23.9.1"
isort = "^5.12.0"
flake8 = "^6.1.0"
mypy = "^1.5.1"
ruff = "^0.0.289"
pylint = "^2.17.5"
types-jsonschema = "^4.19.0.4"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
strict = true
plugins = "pydantic.mypy"

[tool.django-stubs]
django_settings_module = "wordtrack.settings"

[tool.black]
line-length = 120
target_version = ['py311']

[tool.isort]
lines_after_imports = 2
line_length = 120
profile = "black"

[tool.ruff]
ignore = ["E501", "ANN101", "ANN102", "S311", "S101", "PLR2004", "RUF001"]
line-length = 120
exclude = ["*/management/*"]
extend-select = [
  "F",
  "W",
  "E",
  "N",
  "ANN",
  "ASYNC",
  "S",
  "BLE",
  "FBT",
  "B",
  "A",
  "C4",
  #"DTZ",
  "T10",
  "T20",
  "PIE",
  "ERA",
  "PL",
  "PERF",
  "FURB",
  #"RUF",
]